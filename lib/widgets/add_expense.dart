
import 'package:flutter/material.dart';
import 'package:myapp/models/expense.dart';
import 'package:myapp/providers/category_provider.dart';
import 'package:myapp/services/firestore_service.dart';
import 'package:provider/provider.dart';

class AddExpense extends StatefulWidget {
  final String userId;
  final DateTime? selectedDate;

  const AddExpense({super.key, required this.userId, this.selectedDate});

  @override
  State<AddExpense> createState() => _AddExpenseState();
}

class _AddExpenseState extends State<AddExpense> {
  final _formKey = GlobalKey<FormState>();
  double amount = 0;
  String? _selectedCategory;
  String notes = ''; // Added notes field

  @override
  Widget build(BuildContext context) {
    final categoryProvider = Provider.of<CategoryProvider>(context);

    return Padding(
      padding: const EdgeInsets.all(20.0),
      child: Form(
        key: _formKey,
        child: Column(
          children: <Widget>[
            const Text(
              'Add a new expense',
              style: TextStyle(fontSize: 18.0, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 20.0),
            DropdownButtonFormField<String>(
              decoration: const InputDecoration(
                hintText: 'Category',
                border: OutlineInputBorder(),
              ),
              value: _selectedCategory,
              validator: (val) => val == null ? 'Please select a category' : null,
              onChanged: (val) => setState(() => _selectedCategory = val),
              items: categoryProvider.categories.map((String category) {
                return DropdownMenuItem(
                  value: category,
                  child: Text(category),
                );
              }).toList(),
            ),
            const SizedBox(height: 20.0),
            TextFormField(
              validator: (val) => val!.isEmpty ? 'Enter an amount' : null,
              onChanged: (val) => setState(() => amount = double.parse(val)),
              decoration: const InputDecoration(hintText: 'Amount'),
              keyboardType: TextInputType.number,
            ),
            const SizedBox(height: 20.0),
            TextFormField(
              onChanged: (val) => setState(() => notes = val),
              decoration: const InputDecoration(hintText: 'Notes (Optional)'),
            ),
            const SizedBox(height: 20.0),
            ElevatedButton(
              child: const Text('Add Expense'),
              onPressed: () async {
                if (_formKey.currentState!.validate()) {
                  await FirestoreService().addExpense(
                    Expense(
                      id: '', // The ID will be generated by Firestore
                      userId: widget.userId,
                      amount: amount,
                      category: _selectedCategory!,
                      date: widget.selectedDate ?? DateTime.now(),
                      notes: notes, // Pass notes to Expense
                    ),
                  );
                  if (mounted) {
                    Navigator.pop(context);
                  }
                }
              },
            )
          ],
        ),
      ),
    );
  }
}
